#!/bin/sh
function usage() {
cat <<EOF

  Usage: 

  ./StartAll  RUN_TYPE

  where
<<<<<<< StartAll
    - RUN_TYPE    (DQM sources you want to activate): raw, digi, clu, track, all, digiclu
=======
    - RUN_TYPE    (DQM sources you want to activate): digi, clu, track, all, digiclu
>>>>>>> 1.17

  Example 0 : ./StartAll  raw
  Example 1 : ./StartAll  digi
  Example 2 : ./StartAll  clu
  Example 3 : ./StartAll  track
  Example 4 : ./StartAll  all
  Example 5 : ./StartAll  digiclu

EOF
}
if [ $# -lt 1 ]; then
  usage; exit 1;
fi

source_type=$1

this="\033[1;31m\033[1m[StartAll]\033[0m - "

echo -e " "
echo -e "$this"
echo -e "$this Command: StartAll $source_type"
echo -e "$this"

<<<<<<< StartAll
if [ "$source_type" == "raw" ]; then
  cp sipixel_monitorelement_config_raw.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_raw.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {RAWmonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorRawData/test/Pixel_DQM_Error.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorRawData/data/SiPixelMonitorRawData.cfi
elif [ "$source_type" == "digi" ]; then
  cp sipixel_monitorelement_config_digi.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_digi.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {DIGImonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/test/Pixel_DQM_Digi.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi
=======
if [ "$source_type" == "digi" ]; then
  cp sipixel_monitorelement_config_digi.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_digi.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {DIGImonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/test/Pixel_DQM_Digi.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi
>>>>>>> 1.17
elif [ "$source_type" == "clu" ]; then
  cp sipixel_monitorelement_config_cluster.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_cluster.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {CLUmonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorCluster/test/Pixel_DQM_Cluster.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorCluster/data/SiPixelMonitorCluster.cfi
elif [ "$source_type" == "track" ]; then
  cp sipixel_monitorelement_config_track.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_track.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {TRKlocalreco,TRKckf,TRKmonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#OutputFileName=.+#OutputFileName=\"${CMSSW_BASE}/src/DQM/SiPixelMonitorTrack/test/Pixel_DQM_TrackResiduals.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorTrack/data/SiPixelMonitorTrackResiduals.cfi
elif [ "$source_type" == "all" ]; then
  cp sipixel_monitorelement_config_all.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_all.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {DIGImonitor,CLUmonitor,TRKlocalrec,TRKckf,TRKmonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/test/Pixel_DQM_Digi.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorCluster/test/Pixel_DQM_Cluster.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorCluster/data/SiPixelMonitorCluster.cfi
  perl -pi.bak -e "s#OutputFileName=.+#OutputFileName=\"${CMSSW_BASE}/src/DQM/SiPixelMonitorTrack/test/Pixel_DQM_TrackResiduals.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorTrack/data/SiPixelMonitorTrackResiduals.cfi
elif [ "$source_type" == "digiclu" ]; then
  cp sipixel_monitorelement_config_digi_cluster.xml sipixel_monitorelement_config.xml
  cp sipixel_qualitytest_config_digi_cluster.xml    sipixel_qualitytest_config.xml
  perl -pi.bak -e "s#pDQMSiPixelSources = .+#pDQMSiPixelSources = {DIGImonitor,CLUmonitor}#g" AllSources.cfg 
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/test/Pixel_DQM_Digi.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi
  perl -pi.bak -e "s#outputFile = .+#outputFile = \"${CMSSW_BASE}/src/DQM/SiPixelMonitorCluster/test/Pixel_DQM_Cluster.root\"#g" ${CMSSW_BASE}/src/DQM/SiPixelMonitorCluster/data/SiPixelMonitorCluster.cfi
fi

export CONSUMER_PATH=${CMSSW_BASE}/src/DQM/SiPixelMonitorClient/test
cd ${CONSUMER_PATH}
echo ${CONSUMER_PATH}
./StopAll
echo "done with StopAll"
eval `scramv1 run -sh`
echo "done with scramv1"
COLLECTORNAME=`/bin/hostname`
echo "done setting collectorname"
echo -e "$this Local host: " $COLLECTORNAME
perl -pi.bak -e "s#string\">.+</serverHost>#string\">$COLLECTORNAME</serverHost>#g" .SiPixelWebClient.xml 
perl -pi.bak -e "s#DestinationAddress = .+#DestinationAddress = \"$COLLECTORNAME\"#g" AllSources.cfg 


# Start Collector: 
echo -e "$this Starting Collector on xterm" 
xterm -T "DQM Collector"    \
      -tn "DQMCollector"    \
      -sb                   \
      -hold                 \
      -bg "#f1feb6"         \
      -fg black             \
      -sl 100               \
      -geometry 80x20+10+10 \
      -e "DQMCollector" &

cp ${CONSUMER_PATH}/js_files/.svgmap.js ${CONSUMER_PATH}/js_files/svgmap.js
perl -pi.bak -e "s#serverHost#$COLLECTORNAME#g" ${CONSUMER_PATH}/js_files/svgmap.js

# Start Sources:
echo -e "$this Starting Producer on xterm" 
xterm -T "Pixel DQM Sources"		       \
      -tn "DQMProducer" 		       \
      -sb				       \
      -hold				       \
      -bg "#d3f2fc"			       \
      -fg black 			       \
      -sl 30000 			       \
      -geometry 80x20+525+10		       \
      -e "eval `scramv1 runtime -csh`; cmsRun AllSources.cfg" &

# Start Client:
cd ${CONSUMER_PATH}
echo -e "$this ./setup.sh $COLLECTORNAME"
./setup.sh $COLLECTORNAME
echo -e "$this ./startMonitorClient"
./startMonitorClient 
echo -e "$this Startup finished."
