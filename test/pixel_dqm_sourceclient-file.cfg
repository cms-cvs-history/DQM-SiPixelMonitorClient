process SIPIXELDQM = {

  #=========================================================================================
  # Sources
    # source of simulated hits
    source = PoolSource
    {
      untracked vstring fileNames	    = 
      #{'file:digis.root'}
      #{'file:/afs/cern.ch/user/m/merkelp/scratch0/PhysicsData_511_digis.root'}
      {'rfio:/castor/cern.ch/user/c/chiochia/cmssw/Muon_FullValidation_150pre3.root'}
      untracked uint32  debugVebosity = 10
      untracked bool	debugFlag     = true
    }
    untracked PSet maxEvents = {untracked int32 input = -1}
  # End Sources
  #=========================================================================================

  # MessageLogger service
 	 include "FWCore/MessageLogger/data/MessageLogger.cfi"

  #=========================================================================================
    service = AdaptorConfig {}
  #=========================================================================================
  # Geometry
	# Tracker SimGeometryXML
  	include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
  	# Tracker Geometry Builder
  	include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  	# Tracker Numbering Builder
  	include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
   	# magn. field
   	include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  # End Geometry
  #=========================================================================================
  # SiPixel DQM Modules:
    # SiPixelMonitorRawData
    	include "DQM/SiPixelMonitorRawData/data/SiPixelMonitorRawData.cfi"

    # SiPixelMonitorDigi
    	include "DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi"

  ################ The Client (SiPixelEDAClient) ################
   module sipixelEDAClient = SiPixelEDAClient {
     untracked int32  CollationtionFlag = 0
     untracked int32  FileSaveFrequency = 50
     untracked int32  StaticUpdateFrequency = 10
     untracked string OutputFilePath = "."     
   }
  # End Modules Configuration
  #=========================================================================================
  
  # DQM services
  	service = DaqMonitorROOTBackEnd{}
	service = DQMShipMonitoring{ untracked uint32 period = 1000 }

    # DQM Online Environment
 #### PUT THIS MODULE INTO YOUR PATH FOR OPERATION AT P5
    module dqmEnv = DQMEventInfo {
	# define folder to store event info (default: EventInfo)
	untracked string eventInfoFolder = "EventInfo"
    }
    
    # DQM Online File saver module
 #### PUT THIS MODULE INTO YOUR PATH FOR OPERATION AT P5
    module dqmSaver = DQMFileSaver {
	# subsystem name (appears in filename)
	# default is: filename is taken from SourceName
	#	      (toplevel of me-dir-tree) fixme
	untracked string fileName = "Pixel"
       # environment flag (default: "Online")
       //# FIXME should be implemented in dbe::save first
	untracked string environment = "Online"
	# Save file every N lumi sections (-1: disabled)
	untracked int32 prescaleLS = -1
	# Save file every N events (-1: disabled)
	untracked int32 prescaleEvt = -1
	# Save file every N minutes (-1: disabled)
	untracked int32 prescaleTime = -1
	# Save at end of run, runnumber in filename (default: true)
	untracked bool saveAtRunEnd = true
	# Save at end of job, no runnumber in filename (default: false)
	untracked bool saveAtJobEnd = false
    }

  #=========================================================================================

   service = ModuleWebRegistry { }
   service = LockService { untracked vstring labels = { "source" } }

######################## Scheduling
    sequence RAWmonitor = {
      SiPixelRawDataErrorSource
    }
    sequence DIGImonitor = {
      SiPixelDigiSource
    }
    sequence DQMmodules = {
      dqmEnv,
      dqmSaver
    }
    
  # End Schedule
  #=========================================================================================
  #path p = {RAWmonitor,DIGImonitor,sipixelEDAClient,DQMmodules}
  path p = {DIGImonitor,sipixelEDAClient,DQMmodules}

}
