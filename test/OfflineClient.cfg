process DQMSIPIXELDIGICLU = {

  # MessageLogger service
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = LockService {
    untracked vstring labels = { "source" }
  }

  #=========================================================================================
  # Geometry
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

   # magn. field
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # required for Pixel and SiStrip Digitizers
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  # End Geometry
  #=========================================================================================

  #=========================================================================================
  # Sources
    # source of simulated hits
    source = PoolSource
    {
      untracked vstring fileNames	    = 
      #{"file:FlatPtSimHits.root"}
      {'rfio:/castor/cern.ch/user/c/chiochia/cmssw/Muon_FullValidation_150pre3.root'}
      untracked uint32  debugVebosity = 10
      untracked bool	debugFlag     = true
    }
    untracked PSet maxEvents = {untracked int32 input = -1}
  # End Sources
  #=========================================================================================
#    source = DQMEventSource{ 
#	 #untracked string meSubscriptionList = "cfg/MESubscriptionList.xml"
#	 #untracked string qtList = "cfg/sistrip_qualitytest_config.xml"
#	 untracked bool getQualityTestsFromFile = true   
#	 untracked int32 numberOfUpdatesToBeSkipped = 1
#	 untracked string server = "COLLECTOR.cern.ch"
#	 untracked int32 port = 9090
#	 untracked string name = "SiPixelOfflineClient"
#	 untracked string iRunMEName = "Collector/FU0/EventInfo/iRun"
#	 untracked string iEventMEName = "Collector/FU0/EventInfo/iEvent"
#	 untracked string timeStampMEName = "Collector/FU0/EventInfo/timeStamp"
#	 untracked int32 reconnect_delay_secs = 5
#	 untracked bool actAsServer = true
#    }
  #=========================================================================================
  # Modules Configuration
    # SiPixelMonitorDigi
    include "DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi"
    # use the following flag to select all detectors (e.g. for mtcc data). by default is false
    # replace SiStripMonitorDigi.SelectAllDetectors = true
    #replace SiStripMonitorDigi.OutputMEsInRootFile = false

    # SiPixelMonitorCluster
    #include "DQM/SiPixelMonitorCluster/data/SiPixelMonitorCluster.cfi"
    # use the following flag to select all detectors (e.g. for mtcc data). by default is false
    # replace SiStripMonitorCluster.SelectAllDetectors = true
    # Save/Don't save histograms in output file. Value is boolean: true/false. See SiStripMonitorCluster::endJob
    # for details.
    #replace SiStripMonitorCluster.UseCalibDataFromDB  = false # this is for the noise service
    #replace SiStripMonitorCluster.OutputMEsInRootFile = false

    # can comment out MonitorDeamon if you want to run without DQMCollector - this should go as include in DQMServices
    # include "DQM/SiStripMonitorCluster/data/MonitorDaemon.cfi"
    # replace MonitorDaemon.DestinationAddress = "cmswn064.fnal.gov"
    # replace MonitorDaemon.SendPort = 9090

    # SiPixelOfflineClient
    #include "DQM/SiPixelMonitorClient/data/SiPixelOfflineClient.cfi"
    #replace SiPixelOfflineClient.bOutputMEsInRootFile = true
    module SiPixelOfflineClient = SiPixelOfflineClient{
      untracked bool verbose = false
      untracked bool save = true
      untracked string outFileName = "offlineClient_out.root"
      untracked int32 nQTestEventsDelay	= 10

      # ActionExecutor setup
      untracked string QTestXMLConfig_	= 
         "DQM/SiPixelMonitorClient/test/sipixel_qualitytest_config_digi_cluster.xml"
      untracked string MEsXMLConfig_ = 
         "DQM/SiPixelMonitorClient/test/sipixel_monitorelement_config_digi_cluster.xml"
    }
  # End Modules Configuration
  #=========================================================================================

  # DQM services
    service = DaqMonitorROOTBackEnd{}
    service = ModuleWebRegistry{}
    #include "DQMServices/Daemon/test/data/dqm_monitorDaemon.cfi"
##    service = MonitorDaemon{
#     if true, will automatically start DQM thread in background
##      untracked bool AutoInstantiate=true   
#     if >=0, upon a connection problem, the source will automatically 
#     attempt to reconnect with a time delay (secs) specified here 
#     (default: 5)
##      untracked int32 reconnect_delay = 5
#     collector hostname; examples: lxplus060.cern.ch(default),lxcmse2.cern.ch, etc
##      untracked string DestinationAddress = "lxplus098.cern.ch"
#     port for communicating with collector (default: 9090)
##      untracked int32 SendPort = 9090
#     monitoring period in ms (i.e. how often monitoring elements 
#     are shipped to the collector; default: 1000)
##      untracked int32 UpdateDelay = 5000
#     name of DQM source (default: DQMSource)
##      untracked string NameAsSource = "FU0" 
##    }	
    service = DQMShipMonitoring{
	// event-period for shipping monitoring to collector (default: 25)
	untracked uint32 period = 5000
    }

  #=========================================================================================
  # Schedule
    # reconstruction
    #path pdigitize_clusterize	 = {mix,siStripDigis,siStripClusters}
    # digi and cluster monitoring only the ones that pass the hlt
    path pdqm			 = {SiPixelDigiSource,SiPixelOfflineClient}
    # monitor for every event the trigger decision
    #path phltdqm		 = {SiStripMonitorHLT}
  # End Schedule
  #=========================================================================================
}
